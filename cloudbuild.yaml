steps:
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    env:
      - "DOCKER_BUILDKIT=1"
    args:
      [
        "build",
        "-t",
        "$_IMAGE:$SHORT_SHA",
        "-f",
        "./Dockerfile",
        "--cache-from",
        "${_IMAGE}:latest",
        ".",
      ]

  # Tag the container image as latest
  - name: "gcr.io/cloud-builders/docker"
    env:
      - "DOCKER_BUILDKIT=1"
    args: ["tag", "$_IMAGE:$SHORT_SHA", "$_IMAGE:latest"]

  # Push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    env:
      - "DOCKER_BUILDKIT=1"
    args: ["push", $_IMAGE]

  # Deploy container image to Dokploy instance
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        RESPONSE=$(curl -o /dev/null -s -w "%{http_code}" --request POST --url $_DOKPLOY_WEBHOOK_URL \
          --header "Content-Type: application/json" \
          --header "X-GITHUB-EVENT: push" \
          --data "{\"head_commit\": {\"id\": \"$SHORT_SHA\", \"message\": \"Deploying $_APP_NAME to Dokploy\"}}")

        if [ "$$RESPONSE" != "200" ]; then
          echo "Failed to deploy to Dokploy, response code: $$RESPONSE"
          exit 1
        else
          echo "Successfully deployed to Dokploy, response code: $$RESPONSE"
        fi

substitutions:
  _IMAGE: "us-central1-docker.pkg.dev/${PROJECT_ID}/pocket-apps/${_APP_NAME}"
  _APP_NAME: "marvel-wiki"
  _DOKPLOY_WEBHOOK_URL: ""

artifacts:
  images:
    - $_IMAGE:$SHORT_SHA
